构造方法：
	 	* public StringBuffer():无参构造方法
	 	* public StringBuffer(int capacity):指定容量的字符串缓冲区对象
	 	* public StringBuffer(String str):指定字符串内容的字符串缓冲区对象
	 * B:StringBuffer的方法：
	 	* public int capacity()：返回当前容量。	理论值(不掌握)
	 	* public int length():返回长度（字符数）。 实际值
添加功能
	 	* public StringBuffer append(String str):
	 		* 可以把任意类型数据添加到字符串缓冲区里面,并返回字符串缓冲区本身
	 	* public StringBuffer insert(int offset,String str):
	 		* 在指定位置把任意类型的数据插入到字符串缓冲区里面,并返回字符串缓冲区本身
删除功能
	* public StringBuffer deleteCharAt(int index):
		* 删除指定位置的字符，并返回本身
	* public StringBuffer delete(int start,int end):
		* 删除从指定位置开始指定位置结束的内容，并返回本身
替换功能
	* public StringBuffer replace(int start,int end,String str):
		* 从start开始到end用str替换
* B:StringBuffer的反转功能
	* public StringBuffer reverse():
		* 字符串反转
------------------------------------------------------------
截取功能
	* public String substring(int start):
		* 从指定位置截取到末尾
	* public String substring(int start,int end):
		* 截取从指定位置开始到结束位置，包括开始位置，不包括结束位置
* B:注意事项
	* 注意:返回值类型不再是StringBuffer本身而是string
------------------------------------------------------------
String 转换为 StringBuffer
	* a:通过构造方法
	* b:通过append()方法
StringBuffer 转换为 String
	* a:通过构造方法
	* b:通过toString()方法
	* c:通过subString(0,length);